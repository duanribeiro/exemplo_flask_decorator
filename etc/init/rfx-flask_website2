#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO


dir=$ROBOTFXDIR
cmd="$dir/test/resources/fixclient/flask_website.py -p 4000 -c $dir/test/fixclient/config2.txt"

[ -f $dir/etc/env ] && . $dir/etc/env
. $dir/etc/init/init-utils

name=`basename $0`
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
foreground=0

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps -p `get_pid` > /dev/null 2>&1
}

start()
{
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"

        rm -Rf /var/tmp/fix-fixclient2-*
        rm -Rf /var/tmp/fix-client2-*

        if [ $foreground -eq 1 ]; then
            ($cmd)
        else
            ($cmd) 1>> $stdout_log 2>&1 &
        fi

        echo $! > "$pid_file"
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
}

stop()
{
    echo -n "Stopping $name.."

    if is_running; then
        kill `get_pid`
        for i in 1 2 3 4 5 6 7 8 9 10
        # for i in `seq 10`
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo -n "     "

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo_warning "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo_warning "Not running"
    fi  
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        if is_running; then
            echo "Unable to stop, will not attempt to start"
            exit 1
        fi
        start
        ;;
    status)
        if is_running; then
            echo -n "$name " && echo_success
        else
            echo -n "$name " && echo_failure
            exit 1
        fi
        ;;
    debug)
        foreground=1
        start
        ;;
    cmd)
        echo $cmd
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|debug}"
        exit 1
        ;;
esac

exit 0
